{"version":3,"sources":["TodoContext.js","components/useLocalStorage.js","components/TodoCounter.js","components/TodoSearch.js","components/TodoList.js","components/TodoItem.js","components/CreateTodoButton.js","Modal.js","components/TodoForm.js","AppUI.js","App.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completeTodo","todoIndex","findIndex","newTodos","addTodo","push","uncompleteTodo","deleteTodo","splice","children","TodoCounter","useContext","className","TodoSearch","Fragment","placeholder","onChange","event","target","TodoList","TodoItem","onClick","onComplete","onUncomplete","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","AppUI","map","App","render"],"mappings":"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","file":"static/js/main.5c35e102.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useLocalStorage } from './components/useLocalStorage';\r\n\r\n\r\n// 2 componentes, provider y consumer\r\nconst TodoContext = React.createContext();\r\n\r\nfunction TodoProvider(props) {\r\n\r\n  // cambiamos para en vez de recibir array, recibir un objeto y luego lo\r\n  // renombramos para que los nombres coincidan\r\n  const {\r\n    item: todos,\r\n    saveItem: saveTodos,\r\n    loading,\r\n    error\r\n  } = useLocalStorage('TODOS_V1', []);\r\n  const [searchValue, setSearchValue] = React.useState('');\r\n  const [openModal, setOpenModal] = React.useState(false);\r\n\r\n  const completedTodos = todos.filter(todo => todo.completed === true).length;\r\n  const totalTodos = todos.length;\r\n\r\n  let searchedTodos =[];\r\n\r\n  if (!searchValue.length >= 1){\r\n    searchedTodos = todos;\r\n  } else {\r\n    searchedTodos = todos.filter(todo =>{\r\n      const todoText = todo.text.toLowerCase();\r\n      const searchText = searchValue.toLowerCase();\r\n      return todoText.includes(searchText);\r\n    })\r\n  }\r\n\r\n  const completeTodo = (text) => {\r\n    const todoIndex = todos.findIndex (todo => todo.text === text)\r\n    const newTodos = [ ...todos ];\r\n    newTodos[todoIndex].completed = true;\r\n    saveTodos(newTodos);\r\n  }\r\n\r\n  const addTodo = (text) => {\r\n    const newTodos = [ ...todos ];\r\n    newTodos.push({\r\n      completed: false,\r\n      text,\r\n    });\r\n    saveTodos(newTodos);\r\n  }\r\n\r\n  const uncompleteTodo = (text) => {\r\n    const todoIndex = todos.findIndex ( todo => todo.text === text)\r\n    const newTodos = [ ...todos ];\r\n    newTodos[todoIndex].completed = false;\r\n    saveTodos(newTodos);\r\n  }\r\n\r\n  const deleteTodo = (text) => {\r\n    const todoIndex = todos.findIndex (todo => todo.text === text)\r\n    const newTodos = [ ...todos ];\r\n    // para poder eliminar el todo, usamos splice para\r\n    // indicar desde donde eliminamos y cuantos elementos\r\n    newTodos.splice(todoIndex, 1);\r\n    saveTodos(newTodos);\r\n  }\r\n\r\n  return (\r\n    <TodoContext.Provider value={{\r\n      loading,\r\n      error,\r\n      totalTodos,\r\n      completedTodos,\r\n      searchValue,\r\n      setSearchValue,\r\n      searchedTodos,\r\n      completeTodo,\r\n      addTodo,\r\n      uncompleteTodo,\r\n      deleteTodo,\r\n      openModal,\r\n      setOpenModal\r\n    }}>\r\n      {props.children}\r\n    </TodoContext.Provider>\r\n  )\r\n}\r\n\r\nexport { TodoContext, TodoProvider };\r\n","import React from 'react';\r\n\r\nfunction useLocalStorage (itemName, initialValue) {\r\n  const [error, setError] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [item, setItem] = React.useState(initialValue);\r\n\r\n  React.useEffect(() => {\r\n    // simulamos el tiempo de espera del local storate como \r\n    // si se tratase de consumir una API\r\n    setTimeout(() => {\r\n      try{\r\n        const localStorageItem = localStorage.getItem(itemName)\r\n        let parsedItem;\r\n\r\n        if (!localStorageItem){\r\n          // si localStorageItem esta vacio se crea un array el cual luego se puede poblar y\r\n          // utilizar con JSON.parse en el estado de Item\r\n          localStorage.setItem(itemName, JSON.stringify(initialValue))\r\n          parsedItem= [];\r\n        } else {\r\n          parsedItem = JSON.parse(localStorageItem)\r\n        }\r\n\r\n        setItem(parsedItem);\r\n        setLoading(false);\r\n      } catch(error) {\r\n        setError(error);\r\n      }\r\n    },1000)\r\n  })\r\n  \r\n  // funcion para guardar los Item en el estado pero ademas\r\n  // PARA PERSISTIR LOS ITEM EN EL LOCAL STORAGE\r\n  const saveItem= (newItem) => {\r\n    try {\r\n      const stringifiedItem = JSON.stringify(newItem);\r\n      localStorage.setItem(itemName, stringifiedItem);\r\n      setItem(newItem);\r\n    } catch(error){\r\n      setError(error);\r\n    }\r\n  }\r\n\r\n  return {\r\n    item,\r\n    saveItem,\r\n    loading,\r\n    error\r\n  }\r\n}\r\n\r\nexport { useLocalStorage };","import React from 'react';\r\nimport './TodoCounter.css'\r\nimport { TodoContext } from '../TodoContext';\r\n\r\nfunction TodoCounter() {\r\n\r\n  const {totalTodos, completedTodos} = React.useContext(TodoContext);\r\n\r\n  return(\r\n    <h2 className=\"TodoCounter\">\r\n      Has completado {completedTodos} de {totalTodos} TODOs\r\n    </h2>\r\n  )\r\n}\r\n\r\nexport default TodoCounter;","import React from 'react'\r\nimport './TodoSearch.css'\r\nimport { TodoContext } from '../TodoContext'\r\n\r\nfunction TodoSearch(){\r\n\r\n  const {searchValue, setSearchValue} = React.useContext(TodoContext)\r\n\r\n  const onSearchValueChange = (event) => {\r\n    setSearchValue(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <input \r\n        className=\"TodoSearch\"\r\n        placeholder=\"Busque una tarea\"\r\n        value={searchValue}\r\n        onChange={onSearchValueChange}\r\n      />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default TodoSearch;","import React from 'react'\r\nimport './TodoList.css'\r\n\r\nfunction TodoList(props) {\r\n  return(\r\n    <section>\r\n      <ul>\r\n        {props.children}\r\n      </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport './TodoItem.css'\r\n\r\nfunction TodoItem(props) {\r\n\r\n  const changeCompleteState = () => {\r\n    if (!props.completed === true){\r\n      props.onComplete()\r\n    } else {\r\n      props.onUncomplete()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li className=\"TodoItem\">\r\n      <span\r\n        className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\r\n        onClick={() => {changeCompleteState()}}\r\n      >\r\n        🗸\r\n      </span>\r\n      <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>{props.text}</p>\r\n      <span \r\n        className=\"Icon Icon-delete\"\r\n        onClick={() => props.deleteTodo()}\r\n      >\r\n        X\r\n      </span>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default TodoItem;","import React from 'react'\r\nimport './CreateTodoButton.css'\r\n\r\nfunction CreateTodoButton(props) {\r\n\r\n  const onClickFunction = () => {\r\n    props.setOpenModal(prevState => !prevState);\r\n  }\r\n  \r\n  return (\r\n    <button \r\n      className=\"CreateTodoButton\"\r\n      onClick={onClickFunction}\r\n    >\r\n      +\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default CreateTodoButton;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './Modal.css'\r\n\r\nfunction Modal({ children }){\r\n  return ReactDOM.createPortal(\r\n    <div className=\"ModalBackground\">\r\n      {children}\r\n    </div>,\r\n    document.getElementById('modal')\r\n  )\r\n}\r\n\r\nexport { Modal }","import React from 'react'\r\nimport './TodoForm.css'\r\nimport { TodoContext } from '../TodoContext'\r\n\r\nfunction TodoForm(){\r\n\r\n  const [newTodoValue, setNewTodoValue] = React.useState('');\r\n  const {\r\n    addTodo,\r\n    setOpenModal,\r\n  } = React.useContext(TodoContext)\r\n\r\n  const onChange = (event) => {\r\n    setNewTodoValue(event.target.value)\r\n  }\r\n\r\n  const onCancel = () => {\r\n    setOpenModal(false);\r\n\r\n  }\r\n\r\n  const onSubmit = (event) => {\r\n    // prevenimos recargar la pagina al enviar el formulario\r\n    event.preventDefault();\r\n    addTodo(newTodoValue);\r\n    setOpenModal(false);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <label>Escribe tu nueva tarea</label>\r\n      <textarea\r\n        value={newTodoValue}\r\n        onChange={onChange}\r\n        placeholder=\"Agregue una tarea\"\r\n      />\r\n      <div className=\"TodoForm-buttonContainer\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"TodoForm-button TodoForm-button--cancel\"\r\n          onClick={onCancel}\r\n        >\r\n          Cancelar\r\n        </button>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"TodoForm-button TodoForm-button--add\"\r\n        >\r\n          Añadir\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport { TodoForm }","import React from 'react'\r\nimport TodoCounter from './components/TodoCounter';\r\nimport TodoSearch from './components/TodoSearch';\r\nimport TodoList from './components/TodoList';\r\nimport TodoItem from './components/TodoItem';\r\nimport CreateTodoButton from './components/CreateTodoButton';\r\nimport { TodoContext } from './TodoContext';\r\nimport { Modal } from './Modal';\r\nimport { TodoForm } from './components/TodoForm';\r\n\r\nfunction AppUI() {\r\n  const {\r\n    error,\r\n    loading,\r\n    searchedTodos,\r\n    completeTodo,\r\n    uncompleteTodo,\r\n    deleteTodo,\r\n    openModal,\r\n    setOpenModal\r\n  } = React.useContext(TodoContext)\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <TodoCounter/>\r\n      <TodoSearch/>\r\n      <TodoList>\r\n        {error && <p>Hubo un error, desespérate</p>}\r\n        {loading && <p>Éstamos cargando, no desesperes...</p>}\r\n        {(!loading && !searchedTodos.length) && <p>¡Crea tu primer TODO!</p>}\r\n        {searchedTodos.map(todo => (\r\n          <TodoItem\r\n            key={todo.text}\r\n            text={todo.text}\r\n            completed={todo.completed}\r\n            onComplete={() => {completeTodo(todo.text)}}\r\n            onUncomplete={() => {uncompleteTodo(todo.text)}}\r\n            deleteTodo={() => {deleteTodo(todo.text)}}\r\n            />\r\n            ))}\r\n      </TodoList> \r\n\r\n      {openModal && (\r\n        <Modal>\r\n        <TodoForm />\r\n      </Modal>\r\n      )}\r\n      <CreateTodoButton\r\n        setOpenModal={setOpenModal}\r\n      />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default AppUI;","import React from 'react'\r\nimport { TodoProvider } from './TodoContext';\r\nimport AppUI from './AppUI';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <TodoProvider>\r\n      <AppUI/>\r\n    </TodoProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}